#!/bin/bash
#
# –°–∫—Ä–∏–ø—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏–º–ø–æ—Ä—Ç–æ–≤ –¥–ª—è production –¥–µ–ø–ª–æ—è
# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –∏–∑ PyCharm Source Root —Ñ–æ—Ä–º–∞—Ç–∞ –≤ production —Ñ–æ—Ä–º–∞—Ç
#
# –î–æ:  from core.logger import get_logger
# –ü–æ—Å–ª–µ: from backend.core.logger import get_logger
#

set -e

PROJECT_DIR="/home/user/new_bot_ver3"
BACKEND_DIR="$PROJECT_DIR/backend"

echo "üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ production —Ñ–æ—Ä–º–∞—Ç..."
echo ""
echo "üìÇ Backend directory: $BACKEND_DIR"
echo ""

# –°–ø–∏—Å–æ–∫ –í–°–ï–• –º–æ–¥—É–ª–µ–π backend –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
# (–≤–∑—è—Ç–æ –∏–∑ deploy —Å–∫—Ä–∏–ø—Ç–∞)
modules="api core database domain engine exchange execution infrastructure ml_engine models screener scripts services strategies strategy tasks tests utils config"

# –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
total_replacements=0

for module in $modules; do
    echo "üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–¥—É–ª—è: $module"

    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤ —Å–æ–¥–µ—Ä–∂–∞—Ç —Ç–∞–∫–∏–µ –∏–º–ø–æ—Ä—Ç—ã
    count_before=$(find "$BACKEND_DIR" -name "*.py" -type f -exec grep -l "^from ${module}\." {} \; 2>/dev/null | wc -l)
    count_before2=$(find "$BACKEND_DIR" -name "*.py" -type f -exec grep -l "^from ${module} " {} \; 2>/dev/null | wc -l)
    count_before3=$(find "$BACKEND_DIR" -name "*.py" -type f -exec grep -l "^import ${module}$" {} \; 2>/dev/null | wc -l)

    total_before=$((count_before + count_before2 + count_before3))

    if [ $total_before -gt 0 ]; then
        echo "   ‚úì –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏: $total_before"

        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∑–∞–º–µ–Ω—ã (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ù–ï —É–∂–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å backend.)
        find "$BACKEND_DIR" -name "*.py" -type f -exec sed -i \
            -e "s|^\(\s*\)from ${module}\.|\\1from backend.${module}.|g" \
            -e "s|^\(\s*\)from ${module} |\\1from backend.${module} |g" \
            -e "s|^\(\s*\)import ${module}$|\\1import backend.${module} as ${module}|g" \
            {} \;

        total_replacements=$((total_replacements + total_before))
    else
        echo "   - –ò–º–ø–æ—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
done

# –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è main –º–æ–¥—É–ª—è
echo ""
echo "üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–¥—É–ª—è: main"
count_main=$(find "$BACKEND_DIR" -name "*.py" -type f -exec grep -l "^from main import\|^from main\.\|^import main$" {} \; 2>/dev/null | wc -l)

if [ $count_main -gt 0 ]; then
    echo "   ‚úì –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏: $count_main"

    find "$BACKEND_DIR" -name "*.py" -type f -exec sed -i \
        -e "s|^\(\s*\)from main import |\\1from backend.main import |g" \
        -e "s|^\(\s*\)from main\.|\\1from backend.main.|g" \
        -e "s|^\(\s*\)import main$|\\1import backend.main as main|g" \
        {} \;

    total_replacements=$((total_replacements + count_main))
else
    echo "   - –ò–º–ø–æ—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

echo ""
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo "‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo ""
echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ~$total_replacements"
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:"
backend_imports=$(grep -r "^from backend\." "$BACKEND_DIR" --include="*.py" 2>/dev/null | wc -l)
echo "   –ò–º–ø–æ—Ä—Ç—ã —Å 'from backend.': $backend_imports"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å —Å—Ç–∞—Ä—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ (–∏—Å–∫–ª—é—á–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏)
echo "‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∏–º–ø–æ—Ä—Ç–æ–≤ –±–µ–∑ backend. –ø—Ä–µ—Ñ–∏–∫—Å–∞:"
remaining=0
for module in $modules; do
    count=$(grep -r "^from ${module}\." "$BACKEND_DIR" --include="*.py" 2>/dev/null | grep -v "# " | wc -l)
    if [ $count -gt 0 ]; then
        echo "   ‚ö†Ô∏è  –ú–æ–¥—É–ª—å '$module': $count –∏–º–ø–æ—Ä—Ç–æ–≤ –ë–ï–ó backend. –ø—Ä–µ—Ñ–∏–∫—Å–∞"
        remaining=$((remaining + count))
    fi
done

if [ $remaining -eq 0 ]; then
    echo "   ‚úì –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!"
else
    echo ""
    echo "   ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–∞–π–¥–µ–Ω–æ $remaining –∏–º–ø–æ—Ä—Ç–æ–≤ —Ç—Ä–µ–±—É—é—â–∏—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏"
    echo "   –í–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ –∏–º–ø–æ—Ä—Ç—ã –∏–∑ –≤–Ω–µ—à–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏"
fi

echo ""
echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ backend –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è: python backend/main.py"
echo "   2. –û–±–Ω–æ–≤–∏—Ç–µ PyCharm: —É–±–µ—Ä–∏—Ç–µ Source Root —Å –ø–∞–ø–∫–∏ backend/"
echo "   3. –û–±–Ω–æ–≤–∏—Ç–µ Run Configuration –≤ PyCharm:"
echo "      Script path: /path/to/project/backend/main.py"
echo "      Working directory: /path/to/project"
echo "      (–ù–ï /path/to/project/backend)"
echo ""
