"""
–°–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (Email + Telegram).

–¢–ï–ö–£–©–ê–Ø –í–ï–†–°–ò–Ø: –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –±—É–¥—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.
–í—Å—è –ª–æ–≥–∏–∫–∞ –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ logger —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —É—Ä–æ–≤–Ω–µ–º.

–ü—É—Ç—å: backend/services/notification_service.py
"""
from typing import Optional, Dict
from datetime import datetime

from core.logger import get_logger
from config import settings

logger = get_logger(__name__)


class NotificationService:
  """
  –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.

  –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç—Ä–∏ —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏–π:
  - CRITICAL: Emergency shutdown, Daily Loss Killer
  - WARNING: Daily loss warning, –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã
  - INFO: –û–±—â–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  """

  def __init__(self):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞."""
    self.email_enabled = settings.NOTIFICATION_EMAIL_ENABLED
    self.telegram_enabled = settings.NOTIFICATION_TELEGRAM_ENABLED

    logger.info(
      f"NotificationService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω: "
      f"email={self.email_enabled}, telegram={self.telegram_enabled}"
    )

  async def send_critical_alert(
      self,
      title: str,
      message: str,
      context: Optional[Dict] = None
  ):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–ª–µ—Ä—Ç–∞.

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è:
    - Daily Loss Killer emergency shutdown
    - –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞
    - –î–µ—Ç–µ–∫—Ü–∏—è –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

    Args:
        title: –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∞–ª–µ—Ä—Ç–∞
        message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        context: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (dict)
    """
    timestamp = datetime.now().isoformat()

    logger.critical("=" * 80)
    logger.critical(f"üö® CRITICAL ALERT: {title}")
    logger.critical(f"–í—Ä–µ–º—è: {timestamp}")
    logger.critical(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message}")

    if context:
      logger.critical("–ö–æ–Ω—Ç–µ–∫—Å—Ç:")
      for key, value in context.items():
        logger.critical(f"  ‚Ä¢ {key}: {value}")

    logger.critical("=" * 80)

    # TODO: –†–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
    if self.email_enabled:
      await self._send_email_stub(title, message, context)

    if self.telegram_enabled:
      await self._send_telegram_stub(title, message, context)

  async def send_warning(
      self,
      title: str,
      message: str,
      context: Optional[Dict] = None
  ):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è:
    - –ü—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –∫ daily loss limit
    - –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤
    - –î–µ—Ç–µ–∫—Ü–∏—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º

    Args:
        title: –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        context: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    """
    timestamp = datetime.now().isoformat()

    logger.warning("=" * 60)
    logger.warning(f"‚ö†Ô∏è WARNING: {title}")
    logger.warning(f"–í—Ä–µ–º—è: {timestamp}")
    logger.warning(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message}")

    if context:
      logger.warning("–ö–æ–Ω—Ç–µ–∫—Å—Ç:")
      for key, value in context.items():
        logger.warning(f"  ‚Ä¢ {key}: {value}")

    logger.warning("=" * 60)

    # TODO: –†–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
    if self.email_enabled:
      await self._send_email_stub(title, message, context)

    if self.telegram_enabled:
      await self._send_telegram_stub(title, message, context)

  async def send_info(
      self,
      title: str,
      message: str
  ):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è:
    - –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –æ—Ç—á–µ—Ç—ã
    - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–¥–µ–ª–∫–∞–º
    - –û–±—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

    Args:
        title: –ó–∞–≥–æ–ª–æ–≤–æ–∫
        message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    """
    logger.info(f"‚ÑπÔ∏è INFO: {title} - {message}")

    # TODO: –†–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–ª—è –≤–∞–∂–Ω—ã—Ö info —Å–æ–æ–±—â–µ–Ω–∏–π

  async def _send_email_stub(
      self,
      title: str,
      message: str,
      context: Optional[Dict]
  ):
    """
    –ó–∞–≥–ª—É—à–∫–∞ Email –æ—Ç–ø—Ä–∞–≤–∫–∏.

    TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º:
    - SMTP –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    - –®–∞–±–ª–æ–Ω—ã HTML –ø–∏—Å–µ–º
    - –ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∞–ª–µ—Ä—Ç–æ–≤
    """
    logger.info(
      f"[EMAIL STUB] Would send email: "
      f"title='{title}', message='{message}'"
    )

  async def _send_telegram_stub(
      self,
      title: str,
      message: str,
      context: Optional[Dict]
  ):
    """
    –ó–∞–≥–ª—É—à–∫–∞ Telegram –æ—Ç–ø—Ä–∞–≤–∫–∏.

    TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º:
    - python-telegram-bot –∏–ª–∏ aiogram
    - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Markdown
    - Inline –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∞–ª–µ—Ä—Ç–æ–≤ (Emergency Stop)
    """
    logger.info(
      f"[TELEGRAM STUB] Would send telegram: "
      f"title='{title}', message='{message}'"
    )


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
notification_service = NotificationService()